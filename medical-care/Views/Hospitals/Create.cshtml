@model medical_care.Models.Hospital

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="app-main__inner">
        <div class="app-page-title">
            <div class="page-title-wrapper">
                <div class="page-title-heading">
                    <div class="page-title-icon">
                        <i class="pe-7s-car icon-gradient bg-mean-fruit">
                        </i>
                    </div>
                    <div>
                        Create Hospital
                        <div class="page-title-subheading">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <ul class="body-tabs body-tabs-layout tabs-animated body-tabs-animated nav">
            @Html.ActionLink("Back to list", "Index", null, new { @class = "btn btn-primary" })
        </ul>
        <div class="tab-pane tabs-animation fade show active" id="tab-content-0" role="tabpanel">
            <div class="main-card mb-3 card">
                <div class="card-body">
                    <h5 class="card-title"></h5>
                    <form class="">
                        <div class="form-row">
                            <div class="col-md-6">
                                <div class="position-relative form-group">
                                    @Html.LabelFor(model => model.Name)

                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })

                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="position-relative form-group">
                                    @Html.LabelFor(model => model.Address)

                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })

                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-md-12">
                                <div class="position-relative form-group">
                                    @Html.LabelFor(model => model.Description)

                                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }, id = "txtDesc" })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-md-6">
                                <div class="position-relative form-group">
                                    @Html.LabelFor(model => model.Url)

                                    @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })

                                    @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="position-relative form-group">
                                    @Html.LabelFor(model => model.Phone)

                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })

                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-md-6">
                                <div class="position-relative form-group">
                                    @Html.LabelFor(model => model.Status)

                                    @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })

                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="position-relative form-group">
                                    <div class="col-md-2">
                                        @Html.LabelFor(model => model.Thumbnail)
                                    </div>
                                    <div class="col-md-8">
                                        <input type="hidden" name="Thumbnail" value="" />
                                        @Html.ValidationMessageFor(model => model.Thumbnail, "", new { @class = "text-danger" })
                                        <button type="button" id="upload_widget" class="btn-default">Upload files</button>
                                        <div id="image-preview">

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="text-center">
                            <button class="mt-4 btn btn-primary">Create</button>
                            <button type="reset" style="margin-left: 10px" class="mt-4 btn btn-success">Reset</button>
                        </div>
                        
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<script src="https://widget.cloudinary.com/v2.0/global/all.js" type="text/javascript"></script>


@section jsFooter
{
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        var myWidget = cloudinary.createUploadWidget({
            cloudName: 'dhqw9z29d',
            uploadPreset: 'iqkw4ytj'
        },
            (error, result) => {
                if (!error && result && result.event === "success") {
                    var currentValue = $('input[name="Thumbnail"]').val();
                    if (currentValue != null && currentValue.length > 0) {
                        currentValue += ",";
                    }
                    currentValue += result.info.url;
                    $('input[name="Thumbnail"]').val(currentValue);
                    $('#image-preview').append(`<img src="${result.info.url}" width="100px" class="img-thumbnail">`);
                    //console.log('Done! Here is the image info: ', result.info);
                }
            }
        )

        document.getElementById("upload_widget").addEventListener("click",
            function () {
                myWidget.open();
            },
            false);


    </script>
    <script>
        CKEDITOR.replace("txtDesc");
    </script>
}

