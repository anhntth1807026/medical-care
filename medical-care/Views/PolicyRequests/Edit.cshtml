@*@model medical_care.Models.PolicyRequest*@
@model medical_care.Models.PolicyRequest

<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>PolicyRequest</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.RequestId)

        @*<div class="form-group">
            @Html.LabelFor(model => model.RequestDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RequestDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RequestDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Policy.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Policy.Amount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Policy.Amount, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.PolicyName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PolicyName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PolicyName, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        Start date
        <div class="col-md-10">
            <input type="text" name="policyStart" value="" />
            @Html.EditorFor(model => model.PolicyStart, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PolicyStart, "", new { @class = "text-danger" })
        </div>
    </div>*@

<div class="form-group">
    Start & End Date
    <div class="col-md-10">
        <input type="text" name="dateRange" class="form-control"/> 
        
    </div>
</div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.EmployeeId, "EmployeeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EmployeeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.PolicyId, "PolicyId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PolicyId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PolicyId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section jsFooter
{
    <script>
        $(function () {
            //$('input[name="dateRange"]').daterangepicker({
            //    timePicker: true,
            //    startDate: moment().startOf('hour').format('yyyy/MM/DD hh:mm A'),
            //    endDate: moment().startOf('hour').add(32, 'hour').format('yyyy/MM/DD hh:mm A'),
            //    locale: {
            //        format: 'yyyy/MM/DD hh:mm A'
            //    }
            //});
            var start = moment();
            var end = moment().add(365, 'days');

            function cb(start, end) {
                $('input[name="dateRange"]').val(start.format('MM/DD/YYYY') + ' - ' + end.format('MM/DD/YYYY'));
            }

            $('input[name="dateRange"]').daterangepicker({
                startDate: start,
                endDate: end,
                locale: { format: 'MM/DD/YYYY' }
            }, cb);

            cb(start, end);
        });
    </script>
}
