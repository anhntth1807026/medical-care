@model medical_care.Models.Policy


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="main-card mb-3 card">
            <div class="card-body">
                <h5 class="card-title">Policy Form Create</h5>
                <form class="">
                    <div class="position-relative row form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-4">
                            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="position-relative row form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-10">
                            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }, id = "txtDesc" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*<div class="position-relative row form-group">
                        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                <div class="position-relative row form-group">
                    @Html.LabelFor(model => model.Emi, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-sm-4">
                        @Html.EditorFor(model => model.Emi, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Emi, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.AmountOfYear, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-sm-4">
                        @Html.EditorFor(model => model.AmountOfYear, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AmountOfYear, "", new { @class = "text-danger" })
                    </div>
                </div>
                    @*<div class="position-relative row form-group">
                        @Html.LabelFor(model => model.AmountOfYear, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.AmountOfYear, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AmountOfYear, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                <div class="position-relative row form-group">
                    @Html.LabelFor(model => model.HospitalId, "HospitalId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-sm-4">
                        @Html.DropDownList("HospitalId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.HospitalId, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.CompanyId, "CompanyId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-sm-4">
                        @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                    </div>
                </div>
                    @*<div class="position-relative row form-group">
                        @Html.LabelFor(model => model.CompanyId, "CompanyId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-10">
                            @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="position-relative row form-group">
                    @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-sm-3">
                        @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-3">
                        @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
                    @*<div class="form-row">
                        <div class="col-md-6">
                            <div class="position-relative form-group">
                                @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>*@

                        @*<div class="col-md-2">
                                <div class="position-relative form-group">
                                    @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>*@
                        @*<div class="col-md-6">
                            <div class="position-relative form-group">
                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>*@
                    <div class="position-relative row form-check">
                        <div class="col-sm-10 offset-sm-5">
                            <input type="submit" value="Create" class="btn btn-secondary" />
                        </div>
                    </div>
                </form>
            </div>
        </div>


        @*<div class="form-group">
                @Html.LabelFor(model => model.CompanyId, "CompanyId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HospitalId, "HospitalId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("HospitalId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.HospitalId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Emi, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Emi, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Emi, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AmountOfYear, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AmountOfYear, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AmountOfYear, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UpdatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UpdatedAt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UpdatedAt, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DeletedAt, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DeletedAt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeletedAt, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UpdatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UpdatedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>*@
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section jsFooter {
    <script>
        CKEDITOR.replace("txtDesc");
    </script>
}
